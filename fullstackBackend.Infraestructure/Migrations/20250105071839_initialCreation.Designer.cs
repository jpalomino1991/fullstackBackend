// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fullstackBackend.Infraestructure.Data;

#nullable disable

namespace fullstackBackend.Infraestructure.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20250105071839_initialCreation")]
    partial class initialCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("fullstackBackend.Domain.Entities.DepartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Description = "IT"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("fullstackBackend.Domain.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Address");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("FisrtName");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("HireDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LastName");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Phone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "No Address",
                            DepartmentId = 1,
                            FirstName = "Juan",
                            HireDate = new DateTime(2024, 12, 6, 2, 18, 39, 261, DateTimeKind.Local).AddTicks(134),
                            LastName = "Perez",
                            Phone = "123456789"
                        },
                        new
                        {
                            Id = 2,
                            Address = "No Address",
                            DepartmentId = 2,
                            FirstName = "John",
                            HireDate = new DateTime(2024, 11, 6, 2, 18, 39, 261, DateTimeKind.Local).AddTicks(152),
                            LastName = "Doe",
                            Phone = "123456789"
                        },
                        new
                        {
                            Id = 3,
                            Address = "No Address",
                            DepartmentId = 3,
                            FirstName = "Mark",
                            HireDate = new DateTime(2024, 10, 7, 2, 18, 39, 261, DateTimeKind.Local).AddTicks(154),
                            LastName = "Dwain",
                            Phone = "123456789"
                        });
                });

            modelBuilder.Entity("fullstackBackend.Domain.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("fullstackBackend.Domain.Entities.DepartmentEntity", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
